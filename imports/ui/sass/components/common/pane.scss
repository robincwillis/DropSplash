@import '../../setup/variables';
@import '../../setup/mixins';

.pane-position {
	position: relative;
	&.on-right {
		.ds-pane {
			left: calc(100% + 20px);
		}
	}
	&.cover-right {
		.ds-pane {
			left: 0;
		}
	}
	&.on-left {
		.ds-pane {
			right: calc(100% + 20px);
		}
	}
	&.cover-left {
		.ds-pane {
			right: 0;
		}
	}
	&.above {
		.ds-pane {
			bottom: calc(100% + 20px);
		}
	}
	&.below {
		.ds-pane {
			top: calc(100% + 20px);
		}
	}
	&.v-center {
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		.ds-pane {
			top: 50%;
			transform: translateY(-50%);
		}
	}
}

.pane-static {
	.ds-pane {
		position: relative;
	}
}

.ds-pane {
	position: absolute;
	top: 0;
	left: 0;
	font-family: $main-font;
	display: flex;
	flex-direction: column;
	background: $pane-bg;
	box-shadow: 0 10px 40px rgba(0, 0, 0, .2);
	border-radius: $base-border-radius;
	overflow: visible;
	min-width: 225px;
	min-height: 300px;
	text-align: left;
	z-index: 100;
	color: $text-color;
	&.wide {
		width: 300px;
	}

	.ds-empty-content {
		display: block;
		max-width: none;
		width: auto;
	}

	p {
		font-size: 14px;
		margin: 0;
		line-height: 1.5em;
		&.sm {
			letter-spacing: .02em;
			font-size: 12px;
		}
		&.xsm {
			letter-spacing: .05em;
			font-size: 10px;
		}
	}

	.ds-pane-header {
		flex-grow: 0;
		position: relative;
		border-bottom: 1px solid $pane-line-color;
		height: $ds-pane-header-height;
		flex-shrink: 0;
		.pane-title {
			display: block;
			position: absolute;
			left: 45px;
			right: 45px;
			text-align: center;
			font-size: 12px;
			font-weight: 600;
			line-height: $ds-pane-header-height - 1px;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
			letter-spacing: .02em;
		}
		.icon {
			stroke-color: red;
			position: absolute;
			display: flex;
			align-items: center;
			padding: 0 $pane-padding;
			left: 0;
			height: 100%;
			cursor: pointer;
			opacity: .3;
			transition: opacity $med-speed $ease;
			&.right {
				left: auto;
				right: 0;
				float: right;
				width: 42px;
			}
			&:hover {
				opacity: 1;
			}
			svg {
				height: 12px;
				width: 12px;
				max-width: 30px;
				vertical-align: top;
				* {
					fill: $text-color;
				}
			}
		}
	} // end .ds-pane-header

	.ds-pane-tabs {
		flex-grow: 0;
		display: flex;
		flex-shrink: 0;
		width: 100%;
		height: 35px;
		background: $pane-bg;
		position: relative;
		border-bottom: 1px solid $pane-line-color;
		hr {
			display: block;
			height: 2px;
			width: 100%;
			position: absolute;
			border: none;
			left: 0;
			bottom: -1px;
			transition: background $med-speed $ease;
			background-color: $primary-color;
			width: 33.333%;
			margin: 0;
			transition: transform $med-speed $ease;
		}
		.tab {
			display: block;
			width: 100%;
			flex-grow: 1;
			text-align: center;
			cursor: pointer;
			line-height: 34px;
			color: $light-text-color;
			transition: color $med-speed $ease;
			&:hover {
				color: $text-color;
			}
			+ .tab { // 2 tabs
				&.active {
					~ hr {
						transform: translate3d(100%, 0, 0);
					}
				}
				~ hr {
					width: (100% / 2);
				}
				+ .tab { // 3 tabs
					&.active {
							~ hr {
								transform: translate3d(200%, 0, 0);
							}
						}
					~ hr {
						width: (100% / 3);
					}
					+ .tab { // 4 tabs
						&.active {
							~ hr {
								transform: translate3d(300%, 0, 0);
							}
						}
						~ hr {
							width: (100% / 4);
						}
						+ .tab { // 5 tabs
							&.active {
								~ hr {
									transform: translate3d(400%, 0, 0);
								}
							}
							~ hr {
								width: (100% / 5);
							}
							+ .tab { // 6 tabs
								&.active {
									~ hr {
										transform: translate3d(500%, 0, 0);
									}
								}
								~ hr {
									width: (100% / 6);
								}
							} // end 6 tabs
						} // end 5 tabs
					} // end 4 tabs
				} // end 3 tabs
			} // end 2 tabs
		}
	} // end .ds-pane-tabs

	.ds-pane-bottom-drawer {
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		overflow: hidden;
		background: transparent;
    z-index: 12;
    border-radius: 0 0 $base-border-radius $base-border-radius;
    .slider {
    	border-radius: $base-border-radius;
    	height: 100%;
    	background: $pane-bg;
    	.ds-pane-header {
    		border-radius: $base-border-radius $base-border-radius 0 0;
    	}
    }
	}

	.ds-pane-content {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		overflow: visible;
    position: relative;
    width: 100%;
    > span {
    	flex-grow: 1;
			display: flex;
			flex-direction: column;
			position: relative;
			> div,
			> div > div {
				flex-grow: 1;
				display: flex;
				flex-direction: column;
				.content {
					flex-grow: 1;
				}
			}
    }
    .content {
    	width: 100%;
    	overflow-x: hidden;
    	overflow-y: auto;
    }
    .row {
    	margin-bottom: $pane-padding;
    	&.range {
    		padding-top: 3px;
		    margin-bottom: 10px;
    	}
    	&:last-of-type {
    		margin-bottom: 0;
    	}
    	label.divider {
    		position: relative;
    		.text {
    			background: $pane-bg;
			    z-index: 2;
			    position: relative;
			    padding-right: 5px;
    		}
    		&:after {
    			content: '';
    			position: absolute;
    			display: block;
    			left: 2px;
    			right: 0;
    			height: 1px;
    			background: $pane-line-color;
    			top: 4px;
    			z-index: 1;
    		}
    	}
    }
    .pane-grid-row {
    	@include clearfix();
    	margin-left: -5px;
    	margin-right: -5px;
    	.col {
    		float: left;
    		padding: 0 5px;
    		input[type=range] {
    			margin-left: -2px;
				}
    		&.one-third {
    			width: 33.333%;
    		}
    		&.two-thirds {
    			width: 66.666%;
    		}
    		&.half {
    			width: 50%;
    		}
    		&.one-quarter {
    			width: 25%;
    		}
    		&.three-quarter {
    			width: 75%;
    		}
    	}
    	.inline-col {
    		display: inline-block;
    		padding: 0 5px;
    		margin-right: 0;
    		&.align-right {
    			text-align: right;
    		}
    		&.middle {
    			vertical-align: middle;
    			label {
    				margin-bottom: 0;
    			}
    		}
    		input[type=range] {
    			margin-left: -2px;
				}
    		&.one-third {
    			width: 33.333%;
    		}
    		&.two-thirds {
    			width: 66.666%;
    		}
    		&.half {
    			width: 50%;
    		}
    		&.one-quarter {
    			width: 25%;
    		}
    		&.three-quarter {
    			width: 75%;
    		}
    	}
    }
    .pane-padded {
    	padding: $pane-padding;
    }

		.pane-view-actions {
			position: static;
			width: 100%;
			border-radius: 0 0 $base-border-radius $base-border-radius;
			overflow: hidden;
			flex-shrink: 0;
			.button {
				border-radius: 0;
				max-width: none;
				&.hollow {
					border-top: 1px solid $light-grey;
					background-color: transparent;
					color: $light-text-color;
					&:hover {
						color: $text-color;
						background-color: $light-grey;
					}
				}
			}
			&.two-actions {
				@include clearfix();
				.button {
					float: left;
					width: 50%;
				}
			}
		}

	} // end .ds-pane-content

	.color-options {
		margin: 0 -5px;
		.color {
			width: calc(16.6667% - 10px);
			max-width: 30px;
			cursor: pointer;
			border-radius: 50%;
			display: inline-block;
			vertical-align: top;
			margin: 10px 5px 0;
			background: attr(data-color);
			position: relative;
			transition: border $med-speed $ease;
			span {
				display: block;
				border-radius: 50%;
				svg {
					display: block;
					width: 100%;
					height: auto;
					* {
						fill: transparent;
					}
				}
			}
			&.add-color {
				&:after {
					border-color: lighten(#000, 80%);
				}
			}
			.icon {
				// position: absolute;
				// left: 50%;
				// top: 50%;
				// margin: -7px;
				border-radius: 50%;
				svg {
					margin: 0 auto;
					display: block;
					width: 100%;
					height: auto;
					* {
						fill: transparent;
					}
				}
			}
			// &:nth-child(6n+6) {
			// 	margin-right: 0;
			// }
			&:after {
				content: '';
				position: absolute;
				top: -1px;
				right: -1px;
				bottom: -1px;
				left: -1px;
				border-radius: 50%;
				border: 2px solid rgba(0, 0, 0, .07);
				transition: border $med-speed $ease, opacity $med-speed $ease, top $med-speed $ease, right $med-speed $ease, bottom $med-speed $ease, left $med-speed $ease;
			}
			&:before {
				content: '';
				position: absolute;
				top: 0px;
				right: 0px;
				bottom: 0px;
				left: 0px;
				border-radius: 50%;
				border: 3px solid transparent;
				transition: border $med-speed $ease;
			}
			&:hover {
				.icon {
					svg {
						* {
							fill: #000;
						}
					}
				}
				&:after {
					border-color: #333;
				}
				&:before {
					border-color: $pane-bg;
				}
			}
			&.active,
			&:active {
				&.add-color {
					&:after {
						border-color: #000;
					}
				}
				&:after {
					border-color: $primary-color;
				}
				&:before {
					border-color: $pane-bg;
				}
			}
		}
	}

} // end .ds-pane

// Pane Enter/Exit Transitions
.pane-transition-appear {
	transform: scale(.95);
	opacity: 0;
	transition: transform $med-speed $ease, opacity $med-speed $ease;
}

.pane-transition-appear.pane-transition-appear-active {
	transform: scale(1);
	opacity: 1;
}

.pane-transition-leave {
	transform: scale(1);
	opacity: .01;
	transition: transform $med-speed $ease, opacity $med-speed $ease;
}

.pane-transition-leave.pane-transition-leave-active {
	transform: scale(.95);
	opacity: .01;
}

// Next Transition
.pane-next-transition-enter {
	overflow: hidden;
	position: absolute;
  top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 3;
  transform: translate3d(0, 0, 0);
  border-radius: 0 0 30px;
  border-radius: 0 0 $base-border-radius $base-border-radius;
	.pane-content-wrap {
		position: absolute;
	  width: 100%;
	  height: 100%;
	  background: $pane-bg;
	  transform: translate3d(100%, 0, 0);
	  transition: transform .5s $ease;
	}
}

.pane-next-transition-enter.pane-next-transition-enter-active {
	.pane-content-wrap {
  	transform: translate3d(0, 0, 0);
	}
}

.pane-next-transition-leave {
	overflow: hidden;
	position: absolute;
  top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 0;
  transform: translate3d(0, 0, 0);
  border-radius: 0 0 $base-border-radius $base-border-radius;
	.pane-content-wrap {
		position: absolute;
	  width: 100%;
	  height: 100%;
	  background: $pane-bg;
	  transform: translate3d(0, 0, 0);
	  transition: transform .5s $ease, opacity .5s $ease;
	}
}

.pane-next-transition-leave.pane-next-transition-leave-active {
	.pane-content-wrap {
  	transform: translate3d(-100%, 0, 0);
	}
}

// Prev Transition
.pane-prev-transition-enter {
	overflow: hidden;
	position: absolute;
  top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 0;
  transform: translate3d(0, 0, 0);
  border-radius: 0 0 $base-border-radius $base-border-radius;
	.pane-content-wrap {
		position: absolute;
	  width: 100%;
	  height: 100%;
	  background: $pane-bg;
	  transform: translate3d(-100%, 0, 0);
	  transition: transform .5s $ease, opacity .5s $ease;
	}
}

.pane-prev-transition-enter.pane-prev-transition-enter-active {
	&:before {
  	opacity: .01;
  }
	.pane-content-wrap {
  	transform: translate3d(0, 0, 0);
  	opacity: 1;
	}
}

.pane-prev-transition-leave {
	overflow: hidden;
	position: absolute;
  top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 3;
  transform: translate3d(0, 0, 0);
  border-radius: 0 0 30px;
  border-radius: 0 0 $base-border-radius $base-border-radius;
	.pane-content-wrap {
		position: absolute;
	  width: 100%;
	  height: 100%;
	  background: $pane-bg;
	  transform: translate3d(0, 0, 0);
	  transition: transform .5s $ease;
	}
}

.pane-prev-transition-leave.pane-prev-transition-leave-active {
	.pane-content-wrap {
  	transform: translate3d(100%, 0, 0);
	}
}

// Drawer Transition
.pane-drawer-appear {
  background: transparent;
  transition: background .5s $ease;
  .slider {
  	transition: transform .5s $ease;
  	transform: translateY(100%);
  }
}

.pane-drawer-appear.pane-drawer-appear-active {
	background: rgba(0, 0, 0, .3);
  .slider {
  	transform: translateY(0);
  }
}

.pane-drawer-leave {
  background: rgba(0, 0, 0, .3);
  transition: background .5s $ease;
  .slider {
  	transition: transform .5s $ease;
  	transform: translateY(0);
  }
}

.pane-drawer-leave.pane-drawer-leave-active {
	background: transparent;
  .slider {
  	transform: translatey(100%);
  }
}